name: Web Deployment on VPS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  #NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}}
  #CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

  VPS_HOST: ${{ secrets.VPS_HOST }}
  VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
  VPS_SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Setting up the action
      - name: Checkout code
        uses: actions/checkout@v2

      # Caching dependencies to speed up the build process
      - name: NextJS CI Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Setting up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      # Cleaning install of dependencies
      - name: Install dependencies
        run: npm ci

      # Checking for linting / building errors
      - name: Build project
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: 1
          #NEXT_TELEMETRY_DISABLED: 1
          #NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          #CLERK_SECRET_KEY: ${{ env.CLERK_SECRET_KEY }}

      # Docker Deployment in 4 steps:
      # 1. Pull the latest changes from the repo & build nextjs
      # 2. Migrate the database
      # 3. Configure Nginx
      # 4. Restart the services

      # Deploy to VPS with Docker
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ env.VPS_HOST }}
          username: ${{ env.VPS_USERNAME }}
          key: ${{ env.VPS_SSH_PRIVATE_KEY }}
          script: |
            sudo docker-compose down --remove-orphans
            cd /var/www/t3-test
            sudo git fetch
            sudo git pull
            sudo docker-compose up -d
